{"title":"如何搭建个人网页","content":"写在前面 ​	这个是记录一下自己如何搭网站的，当作一个教程和备忘，防止自己忘记怎么搭了。
​	其实之前用hoxe安装过，用的是Next主题，但是换电脑的时候想迁过来有点麻烦，我就删了原来的，Github库也删了，因为不熟悉操作，重建一个干净了事。上次看主页还是一年多，所以基本什么全忘了，从Windows到Mac的系统一些操作也变了，干脆换成Hugo框架。（DeepSeek说go语言更好用，Jekyll也试过了但是总是有奇怪的问题，还是做Hugo吧。）
​	感谢DeepSeek和ChatGPT的支持，结合网上的教程来看，教了我做很多。
一、Hugo安装 （1）安装Homebrew ​	homebrew是一个Mac上很好用的安装软件，很多可以用这个来下载。打开终端，输入下面的代码。
# 安装 Homebrew（如果未安装） /bin/bash -c &#34;$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh)&#34; # 可以网上找找Homebrew的安装教程，第一次安装可能需要一些配置 （2）安装Hogo和Git brew install hugo git # 简单一步就搞定 # 验证安装 hugo version # 应显示类似 hugo v0.125.4+extended git --version # 应显示 git 版本 （3）配置全局Git身份 git config --global user.name &#34;你的GitHub用户名&#34; git config --global user.email &#34;你的GitHub注册邮箱&#34; 二、搭建本地Hugo项目 （1）创建Hugo项目 # 转到根目录（也可以根据自己想要的位置转到那里，如Document等） cd ~ # 创建项目文件夹（这个是在当前目录下创建了一个叫my-hugo-blog的文件夹） hugo new site my-hugo-blog &amp;&amp; cd my-hugo-blog # 初始化 Git git init （2）配置主题 ​	可以根据自己的喜好，选择一个自己喜欢的主题。
​	这里我选择的是PaperMod主题，官网是https://github.com/adityatelange/hugo-PaperMod
# 这个是官网的一个安装教程，根据自己的实际调整 git submodule add --depth=1 https://github.com/adityatelange/hugo-PaperMod.git themes/PaperMod git submodule update --init --recursive # needed when you reclone your repo (submodules may not get cloned automatically) ​	然后修改自己的配置文件，这里我的是在my-hugo-blog文件夹下的hugo.toml文件，有的版本可能是yml文件，两个都可以，只是里面内容的语法不同。
baseURL = &#34;https://ZhongruiXie.github.io/&#34; # 替换为你的 GitHub 用户名 title = &#39;这个是我的网站哦&#39; # 网站名 theme = &#34;PaperMod&#34; # 主题 ​	后面需要对这个配置文件进行更多的个性化修改。
（3）创建新文章 ​	在终端中先转到my-hugo-blog文件夹目录下，然后使用命令行创建新博客。
hugo new posts/hello-world.md ​	编辑在my-hugo-blog文件夹中生成的 content/posts/hello-world.md 文件：
如果你的配置文件是toml格式，那应该是： +++ title: &#34;Hello World&#34; date: 2025-04-28 draft: false +++ 如果你的配置文件是yml格式，那应该是： --- title: &#34;Hello World&#34; date: 2025-04-28 draft: false --- 这是你的第一篇 Hugo 文章！ ​	然后就可以部署到本地进行预览了，在终端输入：
hugo server -D ​	访问 http://localhost:1313 查看效果
三、部署到GitHub Pages （1）创建GitHub仓库 网页端创建仓库 点击 GitHub 右上角 &ldquo;+&rdquo; → &ldquo;New repository&rdquo; 仓库名一定是需要为：用户名.github.io 勾选 &ldquo;Add a README.md&rdquo;（可选） 点击 &ldquo;Create repository&rdquo; 获取仓库地址 在仓库页面点击绿色 &ldquo;Code&rdquo; 按钮 → 选择 &ldquo;SSH&rdquo; → 复制地址（如 git@github.com:用户名/仓库名.git） （2）配置SSH连接 生成SSH密钥（终端中编辑）
# 生成 ED25519 密钥（更安全） ssh-keygen -t ed25519 -C &#34;你的邮箱&#34; # 将密钥添加到 ssh-agent eval &#34;$(ssh-agent -s)&#34; ssh-add ~/.ssh/id_ed25519 添加到GitHub中
# 复制公钥内容 pbcopy &lt; ~/.ssh/id_ed25519.pub # 添加到 GitHub： # 1. 登录 GitHub → Settings → SSH and GPG Keys # 2. 点击 &#34;New SSH Key&#34; → 粘贴公钥 → 保存 测试SSH连接
ssh -T git@github.com 看到 Hi 你的用户名! You've successfully authenticated 表示成功！
（3）连接到仓库并部署 ​	添加工作流文件：
mkdir -p .github/workflows ​	然后打开新建的workflow文件夹，新建一个deploy.yml文件，打开编辑：
name: Build on: push: branches: - master # 如果开发的时候在 master 分支上 permissions: contents: write # 允许push jobs: build-and-deploy: runs-on: ubuntu-latest steps: - name: Checkout uses: actions/checkout@v4 - name: Setup Hugo uses: peaceiris/actions-hugo@v2 with: hugo-version: &#39;0.147.0&#39; #换成自己的版本 extended: true - name: Build run: hugo --minify --baseURL https://ZhongruiXie.github.io/ #注意换成自己的连接 - name: Deploy uses: peaceiris/actions-gh-pages@v3 with: github_token: ${{ secrets.GITHUB_TOKEN }} publish_dir: ./public publish_branch: gh-pages # 注意！部署回 master 分支（小心覆盖） force_orphan: true # 保证干净部署，不留历史 ​	在终端中输入：
git remote add origin https://github.com/&lt;你的用户名&gt;/&lt;你的仓库名&gt;.git git add . git commit -m &#34;第一次部署&#34; git push -u origin master # 第一次要加-u，如果master不成功换成main ​	验证 Git 状态：
git status ​	应该会显示类似这样的信息：
位于分支 master 无文件要提交，干净的工作区 ​	经过这样的配置后，你点开GitHub这个仓库的action，里面应该有一个最近的流程✅，如果是❌，复制里面的报错问问ai，如果成功了，你应该去仓库的setting-&gt;pages-&gt;Build and deployment中，将source改成Deploy from a branch，然后把下面的branch改成gh- pages。
​	此时你在GitHub Pages页顶端，可以访问你的网页，点击visit site按钮，如果网页正常显示，说明已经完成了！
四、日常更新 ​	在终端中：
# 进入项目目录 cd my-blog # 创建新文章（自动生成日期和Front Matter） hugo new posts/新文章标题.md ​	编辑生成的文件 content/posts/新文章标题.md
+++ title = &#34;新文章标题&#34; date = 2025-04-28T15:00:00+08:00 draft = true # 草稿模式，发布前需改为false +++ ​	然后进行本地测试：
# 启动实时预览（包含草稿） hugo server -D # 访问 http://localhost:1313 检查： ✓ 文章是否显示 ✓ 封面图加载 ✓ 分类/标签是否正确 ✓ 搜索功能是否正常 ​	部署到GitHub上：
hugo git add . git commit -m &#34;发布新文章：新文章标题&#34; git push origin master ​	等待一两分钟后，就可以看到自己网页上进行了相应的更新。
最后 ​	可以访问Hugo官网和如PaperMod主题的官网，上面有很多示例配置，教你如何个性化自己的主页💅。
​	有问题最好的办法是问GPT等ai工具，直接复制报错完整描述问题可以很好解决问题🤓。
​	我也反反复复尝试了很多次搭建才成功，一直删库重建😨，如果真的想用代码方式写网页需要不断尝试，或者可以直接问ai无代码搭建网页的方法👀。
","date":"2025-04-28","permalink":"https://ZhongruiXie.github.io/posts/%E5%A6%82%E4%BD%95%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E7%BD%91%E9%A1%B5/"}